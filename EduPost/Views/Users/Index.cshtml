@model IEnumerable<EduPost.Models.User>


@{
    ViewData["Title"] = "Index";
}

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>@ViewData["Title"]</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="~/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="~/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="~/css/style.css" rel="stylesheet">
</head>

<body>
    <div class="container">
        <!-- Spinner Start -->
        <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <!-- Spinner End -->
        <!-- Sidebar Start -->
        @if (User.IsInRole("Admin"))
        {
            <div class="sidebar pe-4 pb-3">
                <nav class="navbar bg-light navbar-light">
                    <a href="index.html" class="navbar-brand mx-4 mb-3">
                        <h3 class="text-primary">EDUPOST</h3>
                    </a>
                    <div class="d-flex align-items-center ms-4 mb-4">
                        <div class="position-relative">
                            @await Component.InvokeAsync("Avatar")
                            <div class="bg-success rounded-circle border border-2 border-white position-absolute end-0 bottom-0 p-1"></div>
                        </div>
                        <div class="ms-3">
                            <h6 class="mb-0">@User.Identity.Name</h6>
                            <span>
                                Admin
                            </span>
                        </div>
                    </div>
                    <div class="navbar-nav w-100">
                        <div class="nav-item dropdown">
                            <a href="#" class="nav-link dropdown-toggle active show" data-bs-toggle="dropdown"><i class="fa fa-laptop me-2"></i>Management</a>
                            <div class="dropdown-menu bg-transparent border-0 show">
                                <a href="/Users/Index" class="dropdown-item active">Users</a>
                                <a href="/Roles/Index" class="dropdown-item">Roles</a>
                                <a href="/Faculties/Index" class="dropdown-item">Faculties</a>
                                <a href="/AYears/Index" class="dropdown-item">Academic Years</a>
                            </div>
                        </div>
                    </div>
                </nav>
            </div>
        }
        else if (User.IsInRole("Manager"))
        {
            <div class="sidebar pe-4 pb-3">
                <nav class="navbar bg-light navbar-light">
                    <a href="/Manager/Index" class="navbar-brand mx-4 mb-3">
                        <h3 class="text-primary">EDUPOST</h3>
                    </a>
                    <div class="d-flex align-items-center ms-4 mb-4">
                        <div class="position-relative">
                            @await Component.InvokeAsync("Avatar")
                            <div class="bg-success rounded-circle border border-2 border-white position-absolute end-0 bottom-0 p-1"></div>
                        </div>
                        <div class="ms-3">
                            <h6 class="mb-0">@User.Identity.Name</h6>
                            <span>Manager</span>
                        </div>
                    </div>
                    <div class="navbar-nav w-100">
                        <a href="/Manager/Index" class="nav-item nav-link"><i class="fa fa-tachometer-alt me-2"></i>Dashboard</a>
                        <a href="/Manager/Articles" class="nav-item nav-link"><i class="fa fa-tachometer-alt me-2"></i>Articles</a>
                        <a href="/Users/Index" class="nav-item nav-link  active"><i class="fa fa-tachometer-alt me-2"></i>Users</a>
                        <a href="/Manager/AcademicYears" class="nav-item nav-link"><i class="fa fa-tachometer-alt me-2"></i>Academic Years</a>
                    </div>
                </nav>
            </div>
        }
        else if (User.IsInRole("Coordinator"))
        {
            <div class="sidebar pe-4 pb-3">
                <nav class="navbar bg-light navbar-light">
                    <a href="/Coordinator/Index" class="navbar-brand mx-4 mb-3">
                        <h3 class="text-primary">EDUPOST</h3>
                    </a>
                    <div class="d-flex align-items-center ms-4 mb-4">
                        <div class="position-relative">
                            @await Component.InvokeAsync("Avatar")
                            <div class="bg-success rounded-circle border border-2 border-white position-absolute end-0 bottom-0 p-1"></div>
                        </div>
                        <div class="ms-3">
                            <h6 class="mb-0">@User.Identity.Name</h6>
                            <span>Coordinator</span>
                        </div>
                    </div>
                    <div class="navbar-nav w-100">
                        <a href="/Coordinator/Index" class="nav-item nav-link"><i class="fa fa-tachometer-alt me-2"></i>Dashboard</a>
                        <a href="/Coordinator/Articles" class="nav-item nav-link"><i class="fa fa-tachometer-alt me-2"></i>Articles</a>
                        <a href="/Coordinator/Statistic" class="nav-item nav-link"><i class="fa fa-tachometer-alt me-2"></i>Statistic</a>
                        <a href="/Users/Index" class="nav-item nav-link active"><i class="fa fa-tachometer-alt me-2"></i>Users</a>
                        <a href="/Coordinator/AcademicYears" class="nav-item nav-link"><i class="fa fa-tachometer-alt me-2"></i>Academic Years</a>
                    </div>
                </nav>
            </div>
        }
        <!-- Sidebar End -->
        <!-- Content Start -->
        <div class="content">
            <!-- Navbar Start -->
            <nav class="navbar navbar-expand bg-light navbar-light sticky-top px-4 py-0">
                <a href="index.html" class="navbar-brand d-flex d-lg-none me-4">
                    <h2 class="text-primary mb-0"><i class="fa fa-hashtag"></i></h2>
                </a>
                <a href="#" class="sidebar-toggler flex-shrink-0">
                    <i class="fa fa-bars"></i>
                </a>               
                <div class="navbar-nav align-items-center ms-auto">
                    <div class="nav-item dropdown">
                        <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                            @await Component.InvokeAsync("Avatar")
                            <span class="d-none d-lg-inline-flex">@User.Identity.Name</span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
                            <a href="/Identity/Account/Manage" class="dropdown-item">My Profile</a>
                            <a href="/Identity/Account/Logout" class="dropdown-item">Log Out</a>
                        </div>
                    </div>
                </div>
            </nav>
            <!-- Navbar End -->
            <!-- Table Start -->
            <div class="container-fluid pt-4 px-4">
                <div class="row g-4">
                    <div class="col-12">
                        <div class="bg-light rounded h-100 p-4">
                            <h6 class="mb-4">Users Table</h6>
                            <p>
                                <a class="btn btn-primary" href="/Identity/Account/Register">Create New</a>
                            </p>
                            <div class="container">
                                <div class="form-group">
                                    <div class="input-group" style="margin-bottom:10px;">
                                        <input type="text" id="search" placeholder="Search User" class="form-control" style="margin-bottom:10px"/>
                                    </div>
                                </div>
                            </div>
                            <div class="container">

                                <button id="toggleViewBtn" class="btn btn-primary mt-3" onclick="toggleView()" style="margin-bottom:7px; background-color:#4C4C4C; color:white;">Group by faculty</button>

                                <div id="groupedUsers" style="display:none;">
                                    @foreach (var group in Model.GroupBy(u => u.Faculty))
                                    {
                                        <div class="faculty-group-container" style="width:100%;">
                                            <div class="toggle-box">
                                                <a class="btn btn-link mt-3 faculty-group-button" href="javascript:void(0)" onclick="toggleFaculty('@group.Key')" style="color: white">@group.Key</a>
                                            </div>
                                            <div class="faculty-group" id="@group?.Key?.Replace(" ", "-")" style="display: none;">
                                                <table class="table">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col">@Html.DisplayNameFor(model => model.Id)</th>
                                                            <th scope="col">@Html.DisplayNameFor(model => model.UserName)</th>
                                                            <th scope="col">@Html.DisplayNameFor(model => model.Email)</th>
                                                            <th scope="col">@Html.DisplayNameFor(model => model.Faculty)</th>
                                                            <th scope="col">@Html.DisplayNameFor(model => model.Role)</th>
                                                            <th scope="col">Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var item in group)
                                                        {
                                                            @if (item.UserName != User.Identity.Name)
                                                            {
                                                                <tr class="result">
                                                                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                                                    <td class="text-truncate" style="max-width:175px">@Html.DisplayFor(modelItem => item.UserName)</td>
                                                                    <td class="text-truncate" style="max-width:175px">@Html.DisplayFor(modelItem => item.Email)</td>
                                                                    <td class="text-truncate" style="max-width:185px">@Html.DisplayFor(modelItem => item.Faculty)</td>
                                                                    <td class="text-truncate" style="max-width:105px">@Html.DisplayFor(modelItem => item.Role)</td>
                                                                    <td>
                                                                        <a class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                                                                        @if (User.IsInRole("Admin"))
                                                                        {
                                                                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                                                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                                                        }
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                     }
                                </div>

                                <div id="ungroupedUsers" style="display:block;">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th scope="col">@Html.DisplayNameFor(model => model.Id)</th>
                                                <th scope="col">@Html.DisplayNameFor(model => model.UserName)</th>
                                                <th scope="col">@Html.DisplayNameFor(model => model.Email)</th>
                                                <th scope="col">@Html.DisplayNameFor(model => model.Role)</th>
                                                <th scope="col">@Html.DisplayNameFor(model => model.Faculty)</th>
                                                <th scope="col">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var user in Model)
                                            {
                                                <tr class="result">
                                                    <td>@Html.DisplayFor(modelItem => user.Id)</td>
                                                    <td class="text-truncate" style="max-width:175px">@Html.DisplayFor(modelItem => user.UserName)</td>
                                                    <td class="text-truncate" style="max-width:175px">@Html.DisplayFor(modelItem => user.Email)</td>
                                                    <td class="text-truncate" style="max-width:105px">@Html.DisplayFor(modelItem => user.Role)</td>
                                                    <td class="text-truncate" style="max-width:185px">@Html.DisplayFor(modelItem => user.Faculty)</td>
                                                    <td>
                                                        <a class="btn btn-info" asp-action="Details" asp-route-id="@user.Id">Details</a> 
                                                        @if (User.IsInRole("Admin"))
                                                        {
                                                            <a class="btn btn-warning" asp-action="Edit" asp-route-id="@user.Id">Edit</a>
                                                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@user.Id">Delete</a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Table End -->

        </div>
        <!-- Content End -->
        <!-- Back to Top -->
        <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/chart/chart.min.js"></script>
    <script src="~/lib/easing/easing.min.js"></script>
    <script src="~/lib/waypoints/waypoints.min.js"></script>
    <script src="~/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="~/lib/tempusdominus/js/moment.min.js"></script>
    <script src="~/lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="~/lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

    <!-- Template Javascript -->
    <script src="~/js/main.js"></script>

    <script>
        //Group script
        function toggleFaculty(facultyName) {
            var facultyGroup = document.getElementById(facultyName.replace(" ", "-"));
            if (facultyGroup.style.display === "none") {
                facultyGroup.style.display = "block";
            } else {
                facultyGroup.style.display = "none";
            }
        }

        //Search script
        $(document).ready(function () {
            const $search = $("#search");
            const $results = $(".result");

            function contains(textOne, textTwo) {
                return textOne.toLowerCase().includes(textTwo.toLowerCase());
            }

            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            const handleSearch = debounce(function () {
                const searchText = $search.val().toLowerCase();
                $results.each(function () {
                    const text = $(this).text().toLowerCase();
                    $(this).toggle(contains(text, searchText));
                });
            }, 250); 

            $search.keyup(handleSearch);
        });

        //Switch Group view script
        let isGroupedView = true;

        function toggleView() {
            isGroupedView = !isGroupedView;

            const groupedView = document.getElementById('groupedUsers');
            const ungroupedView = document.getElementById('ungroupedUsers');
            const toggleBtn = document.getElementById('toggleViewBtn');

            groupedView.style.display = isGroupedView ? 'block' : 'none';
            ungroupedView.style.display = isGroupedView ? 'none' : 'block';

            toggleBtn.textContent = isGroupedView ? 'View all user' : 'Group by faculty';
        }
    </script>
</body>

</html>
